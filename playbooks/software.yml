# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json#/$defs/playbook
#
# sops
- name: Install latest version of helm
  ansible.builtin.include_role:
    name: gantsign.helm
    apply:
      become: true
  vars:
    helm_version: "{{ software_version_helm }}"

# Start Debs

- name: Create list of debs
  ansible.builtin.set_fact:
    software_debs:
      - { url: "https://github.com/ajeetdsouza/zoxide/releases/download/v{{ software_version_zoxide }}/zoxide_{{ software_version_zoxide }}-1_amd64.deb", "name": "zoxide", "version": "{{ software_version_zoxide }}" }
      - { url: "https://github.com/sharkdp/bat/releases/download/v{{ software_version_bat }}/bat_{{ software_version_bat }}_amd64.deb", "name": "bat", "version": "{{ software_version_bat }}" }
      - { url: "https://github.com/lsd-rs/lsd/releases/download/v{{ software_version_lsd }}/lsd_{{ software_version_lsd }}_amd64.deb", "name": "lsd", "version": "{{ software_version_lsd }}" }
      - { url: "https://github.com/derailed/k9s/releases/download/v{{ software_version_k9s }}/k9s_linux_amd64.deb", "name": "k9s", "version": "{{ software_version_k9s }}" }
      - { url: "https://github.com/cli/cli/releases/download/v{{ software_version_gh }}/gh_{{ software_version_gh }}_linux_amd64.deb", "name": "gh", "version": "{{ software_version_gh }}" }
      - { url: "https://github.com/sharkdp/fd/releases/download/v10.1.0/fd_{{ software_version_fd }}_amd64.deb", "name": "fd", "version": "{{ software_version_fd }}" }
      - { url: "https://github.com/BurntSushi/ripgrep/releases/download/{{ software_version_ripgrep }}/ripgrep_{{ software_version_ripgrep }}-1_amd64.deb", "name": "ripgrep", "version": "{{ software_version_ripgrep }}" }
      - { url: "https://github.com/aymanbagabas/shcopy/releases/download/v{{ software_version_shcopy }}/shcopy_{{ software_version_shcopy }}_linux_amd64.deb", "name": "shcopy", "version": "{{ software_version_shcopy }}" }
      - { url: "https://github.com/humanlogio/humanlog/releases/download/v{{ software_version_humanlog }}/humanlog_{{ software_version_humanlog }}_linux_amd64.deb", "name": "humanlog", "version": "{{ software_version_humanlog }}" }
      - { url: "https://github.com/getsops/sops/releases/download/v{{ software_version_sops }}/sops_{{ software_version_sops }}_amd64.deb", "name": "sops", "version": "{{software_version_sops}}" }

- name: Download debs
  become: true
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: /var/cache/apt/archives/{{ item.name }}-{{ item.version }}.deb
    mode: '0600'
  with_items: "{{ software_debs }}"

- name: Install package
  become: true
  ansible.builtin.apt:
    deb: /var/cache/apt/archives/{{ item.name }}-{{ item.version }}.deb
  with_items: "{{ software_debs }}"

# Done Debs

- name: Create ~/config/humanlog directory
  become: no
  file:
    path: "{{ env_home }}/.config/humanlog"
    state: directory
    mode: "0755"

- name: "copy humanlog config"
  become: true
  copy:
    dest: "{{ env_home }}/.config/humanlog/config.json"
    content: '{"truncate-length": 1999}'
    owner: "root"
    mode: '0755'

- name: Install age
  become: true
  quera.github.install_from_github:
    repo: FiloSottile/age
    tag: "v{{software_version_age}}"
    version_command: age --version
    asset_regex: "age-.*"
    move_rules:
      - src_regex: age-.*
        dst: /usr/local/bin/age
        mode: 0755

- name: Install fx
  become: true
  quera.github.install_from_github:
    repo: antonmedv/fx
    tag: "{{software_version_fx}}"
    version_command: fx --version
    asset_regex: fx_.*
    move_rules:
      - src_regex: fx_.*
        dst: /usr/local/bin/fx
        mode: 0755

- name: Install doctl
  become: true
  quera.github.install_from_github:
    repo: digitalocean/doctl
    tag: "v{{software_version_doctl}}"
    version_command: doctl version
    asset_regex: doctl.*
    move_rules:
      - src_regex: doctl.*
        dst: /usr/local/bin/doctl
        mode: 0755

- name: Install helmfile
  become: true
  quera.github.install_from_github:
    repo: helmfile/helmfile
    tag: "v{{software_version_helmfile}}"
    version_command: helmfile --version
    asset_regex: helmfile.*
    move_rules:
      - src_regex: helmfile.*
        dst: /usr/local/bin/helmfile
        mode: 0755

- name: Install kubectx
  become: true
  quera.github.install_from_github:
    repo: ahmetb/kubectx
    tag: "v{{software_version_kubectx}}"
    version_command: kubectx --version
    asset_regex: kubectx.*
    move_rules:
      - src_regex: kubectx.*
        dst: /usr/local/bin/kubectx
        mode: 0755

- name: Install shellcheck
  become: true
  quera.github.install_from_github:
    repo: koalaman/shellcheck
    tag: "v{{software_version_shellcheck}}"
    version_command: shellcheck --version
    asset_regex: shellcheck.*
    move_rules:
      - src_regex: shellcheck
        dst: /usr/local/bin/shellcheck
        mode: 0755

- name: Install hadolint
  become: true
  quera.github.install_from_github:
    repo: hadolint/hadolint
    tag: "v{{software_version_hadolint}}"
    version_command: hadolint --version
    asset_regex: ^hadolint-Linux-\w+$
    move_rules:
      - src_regex: ^hadolint-Linux-\w+$
        dst: /usr/local/bin/hadolint
        mode: 0755

- name: Install typos
  become: true
  quera.github.install_from_github:
    repo: crate-ci/typos
    tag: "v{{software_version_typos}}"
    version_command: typos --version
    asset_regex: typos.*
    move_rules:
      - src_regex: typos.*
        dst: /usr/local/bin/typos
        mode: 0755

- name: Install act
  become: true
  quera.github.install_from_github:
    repo: nektos/act
    tag: "v{{software_version_act}}"
    version_command: act --version
    asset_regex: act.*
    move_rules:
      - src_regex: act.*
        dst: /usr/local/bin/act
        mode: 0755

- name: Install regctl
  become: true
  quera.github.install_from_github:
    repo: regclient/regclient
    tag: "v{{software_version_regctl}}"
    version_command: regctl version
    asset_regex: regctl.*
    move_rules:
      - src_regex: .*
        dst: /usr/local/bin/regctl
        mode: 0755

- name: Install jwt
  become: true
  quera.github.install_from_github:
    repo: mike-engel/jwt-cli
    tag: "{{software_version_jwt}}"
    version_command: jwt --version
    asset_regex: jwt-linux.tar.gz
    move_rules:
      - src_regex: jwt
        dst: /usr/local/bin/jwt
        mode: 0755

- name: Install rover
  become: true
  quera.github.install_from_github:
    repo: apollographql/rover
    tag: "v{{software_version_rover}}"
    version_command: rover --version
    asset_regex: rover.*-gnu.tar.gz
    move_rules:
      - src_regex: dist/rover
        dst: /usr/local/bin/rover
        mode: 0755
