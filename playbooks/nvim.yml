- name: remove old neovim ppa
  become: yes
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: "ppa:neovim-ppa/stable"
    state: absent
- name: setup neovim ppa
  become: yes
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: "ppa:neovim-ppa/unstable"
    state: absent
- become: yes
  when: ansible_os_family == "Debian"
  apt:
    name:
      - ctags
    state: present
- become: yes
  when: ansible_os_family == "Debian"
  apt:
    name:
      - neovim
      - python3-neovim
      - python-neovim
    state: absent
# - shell: "sh -c 'nvim --version || echo'"
#   register: results
# - set_fact:
#     nvim_version: "{{ results.stdout | regex_search(regexp,'\\1') | first }}"
#   when: results.stdout | trim
#   vars:
#     regexp: 'NVIM v([a-z0-9A-Z._-]+)'
- name: Replace old neovim distro with appimage
  become: yes
  get_url:
    url: https://github.com/neovim/neovim/releases/download/v0.4.3/nvim.appimage
    checksum: "sha256:a3b7ccbde583acdc7f3385025d3c5e386f92aa97e425b311a49402836998b4e0"
    dest: /usr/bin/nvim
    mode: '0755'
- stat:
    path: /usr/bin/pip
  register: pip_exists
- stat:
    path: /usr/bin/pip3
  register: pip3_exists
- name: setup neovim on python3
  become: yes
  when: pip_exists.stat.exists == true
  pip:
    executable: /usr/bin/pip
    name: pynvim
    state: present
- name: setup neovim on python3
  become: yes
  when: pip3_exists.stat.exists == true
  pip:
    executable: /usr/bin/pip3
    name: pynvim
    state: present
- name: setup neovim for ruby
  become: yes
  gem:
    user_install: false
    # because its installed by the ruby module
    executable: /usr/local/bin/gem
    name: neovim
    state: present
- name: setup neovim alternatives
  become: yes
  when: ansible_os_family == "Debian"
  with_items:
    - vi
    - vim
    - editor
  alternatives:
    link: "/usr/bin/{{ item }}"
    name: "{{ item }}"
    path: "/usr/bin/nvim"
    priority: 60
- name: Download config from git
  become: no
  git:
    repo: "git@github.com:halkeye/vim.git"
    dest: "{{ env_home }}/.vim"
- name: Create config directory
  become: no
  file:
    path: "{{ env_home }}/.config"
    state: directory
- name: Symlink for neovim config
  become: no
  file:
    src: "{{ env_home }}/.vim"
    dest: "{{ env_home }}/.config/nvim"
    state: link
- name: Install vundle
  become: no
  shell: "./install_vundle.sh"
  args:
    chdir: "{{ env_home }}/.vim"
    creates: "bundle/Vundle.vim"
