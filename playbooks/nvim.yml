- name: remove old neovim ppa
  become: yes
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: "ppa:neovim-ppa/stable"
    state: absent
- name: setup neovim ppa
  become: yes
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: "ppa:neovim-ppa/unstable"
    state: absent
- become: yes
  when: ansible_os_family == "Debian"
  apt:
    name:
      - ctags
    state: present
- become: yes
  when: ansible_os_family == "Debian"
  apt:
    name:
      - neovim
      - python3-neovim
      - python-neovim
    state: absent
- name: Replace old neovim distro with appimage
  become: yes
  get_url:
    url: https://github.com/neovim/neovim/releases/download/v0.3.7/nvim.appimage
    checksum: "sha256:7d20d70889077065a14fec60d8684e66eafb904fc43f34c8b6b8aac40c82416a"
    dest: /usr/bin/nvim
    mode: '0755'
- name: setup neovim on python3
  become: yes
  pip:
    executable: /usr/bin/pip
    name: pynvim
    state: present
- name: setup neovim on python3
  become: yes
  pip:
    executable: /usr/bin/pip3
    name: pynvim
    state: present
- name: setup neovim for ruby
  become: yes
  gem:
    user_install: false
    # because its installed by the ruby module
    executable: /usr/local/bin/gem
    name: neovim
    state: present
- name: setup neovim alternatives
  become: yes
  when: ansible_os_family == "Debian"
  with_items:
    - vi
    - vim
    - editor
  alternatives:
    link: "/usr/bin/{{ item }}"
    name: "{{ item }}"
    path: "/usr/bin/nvim"
    priority: 60
- name: Download config from git
  become: no
  git:
    repo: "git@github.com:halkeye/vim.git"
    dest: "{{ env_user,'HOME') }}/.vim"
- name: Create config directory
  become: no
  file:
    path: "{{ env_user,'HOME') }}/.config"
    state: directory
- name: Symlink for neovim config
  become: no
  file:
    src: "{{ env_user,'HOME') }}/.vim"
    dest: "{{ env_user,'HOME') }}/.config/nvim"
    state: link
- name: Install vundle
  become: no
  shell: "./install_vundle.sh"
  args:
    chdir: "{{ env_user,'HOME') }}/.vim"
    creates: "bundle/Vundle.vim"
- name: Install Plugins
  become: no
  shell: "nvim -E -s -c 'source ~/.vimrc' -c PlugInstall -c UpdateRemotePlugins -c qa"
  register: vim_plugin_install_cmd
  #failed_when: vim_plugin_install_cmd.rc == 1 or vim_plugin_install_cmd.rc >= 2
  ignore_errors: true
  args:
    chdir: "{{ env_user,'HOME') }}/.vim"
