---
zsh_install_ssh_agent: true
docker_apps_dir: /storage/apps

docker_systemd_services:
  - name: hackmd
    image: hackmdio/hackmd
    enabled: false
    required_services:
      - postgres
    ports:
      - 3008:3000
    environments:
      NODE_ENV: production
      HMD_DB_URL: "postgres://{{ hackmd_db_username }}:{{ hackmd_db_password }}@{{ postgres_host }}:5432/{{ hackmd_db_name }}"
      HMD_HSTS_ENABLE: "true"
      HMD_DOMAIN: "{{ hackmd_url }}"
      HMD_PROTOCOL_USESSL: "true"
      HMD_SESSION_SECRET: "{{ hackmd_session_secret }}"
      HMD_URL_ADDPORT: 0

  - name: mosquitto
    image: eclipse-mosquitto
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - "{{ docker_apps_dir }}/mosquitto/config:/mosquitto/config"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: shinobi
    image: shinobicctv/shinobi
    enabled: false
    ports:
      - 3016:8080
    devices:
      - /dev/video0
    args: node camera.js
    environments:
      ADMIN_PASSWORD: "{{ shinobi_admin_password }}"
      MYSQL_USER: "{{ shinobi_db_username }}"
      MYSQL_PASSWORD: "{{ shinobi_db_password }}"
      MYSQL_HOST: "{{ mysql_host }}"
      MYSQL_DATABASE: shinobi
    volumes:
      - "{{ docker_apps_dir }}/shinobi/videos:/opt/shinobi/videos"

  - name: shinobi-cron
    image: shinobicctv/shinobi
    enabled: false
    devices:
      - /dev/video0
    args: node cron.js
    environments:
      ADMIN_PASSWORD: "{{ shinobi_admin_password }}"
      MYSQL_USER: "{{ shinobi_db_username }}"
      MYSQL_PASSWORD: "{{ shinobi_db_password }}"
      MYSQL_HOST: "{{ mysql_host }}"
      MYSQL_DATABASE: shinobi
    volumes:
      - "{{ docker_apps_dir }}/shinobi/videos:/opt/shinobi/videos"

  - name: calibre-web
    enabled: false
    image: technosoft2000/calibre-web
    extras:
      - "--security-opt=no-new-privileges:true"
    ports:
      - 8111:8083
    environments:
      PGID: 1000
      PUID: 1000
      USE_CONFIG_DIR: "true"
      TZ: "America/Vancouver"
    volumes:
      ## move everywhere?
      - "/etc/localtime:/etc/localtime:ro"
      - "/storage/homes/halkeye/Documents/Calibre Library:/books"
      - "{{ docker_apps_dir }}/calibre-web:/calibre-web/config"
    labels:
      - "traefik.frontend.rule=Host:books.{{traefik_domain}}"
      - "traefik.frontend.auth.forward.address=https://{{ traefik_auth_address }}"
      - "traefik.frontend.auth.forward.authResponseHeader=X-Forwarded-User"
      - "traefik.enable=true"
      - "traefik.port=8083"
      - com.centurylinklabs.watchtower.enable

  - name: chronograf
    enabled: false
    image: chronograf
    ports:
      - 3012:8888
    args: "--influxdb-url=http://{{ influxdb_host }}:8086"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8888"
      - com.centurylinklabs.watchtower.enable

  - name: dnscrypt
    enabled: false
    description: DNSCrypt client proxy
    image: halkeye/dnscrypt-proxy

  - name: dnscrypt@
    enabled: false
    description: DNSCrypt client proxy
    image: rix1337/docker-dnscrypt
    environments:
      RESOLVER_NAME: "%i"

  - name: factorio
    enabled: false
    image: halkeye/factorio
    ports:
      - 34197:34197/udp
    environments:
      SERVERSETTINGS: /opt/factorio/conf/server-settings.json
    volumes:
      - "{{ docker_apps_dir }}/factorio/saves:/opt/factorio/saves"
      - "{{ docker_apps_dir }}/factorio/conf:/opt/factorio/conf"

  - name: freshrss
    image: freshrss/freshrss
    enabled: false
    required_services:
      - mariadb
    ports:
      - 3010:80
    environments:
      CRON_MIN: 23,53
    volumes:
      - "{{ docker_apps_dir }}/freshrss:/var/www/FreshRSS/data"
    labels:
      - com.centurylinklabs.watchtower.enable
      - "traefik.frontend.rule=Host:rss.{{traefik_domain}}"
      - "traefik.enable=true"
      - "traefik.port=80"

  - name: grafana
    enabled: false
    image: grafana/grafana
    ports:
      - 9003:3000
    volumes:
      - "{{ docker_apps_dir }}/grafana/data:/var/lib/grafana"
    environments:
      GF_SERVER_ROOT_URL: "{{ grafana_root_url }}"
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_admin_password }}"
      GF_AWS_PROFILES: default
      GF_AWS_default_ACCESS_KEY_ID: "{{ grafana_aws_access_key }}"
      GF_AWS_default_SECRET_ACCESS_KEY: "{{ grafana_aws_secret_key }}"
      GF_AWS_default_REGION: us-west-1
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,cloudflare-app,briangann-gauge-panel,jdbranham-diagram-panel,mtanda-google-calendar-datasource
      GF_AUTH_ANONYMOUS_ENABLED: "false"

      GF_AUTH_DISABLE_LOGIN_FORM: "false"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_BASIC_ENABLED: "true"
      GF_AUTH_PROXY_ENABLED: "true"
      GF_AUTH_PROXY_HEADER_NAME: X-Forwarded-User
      GF_AUTH_PROXY_HEADER_PROPERTY: email
      GF_AUTH_PROXY_AUTO_SIGN_UP: "true"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_AUTO_ASSIGN_ORG: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: Viewer
    labels:
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.frontend.auth.forward.address=https://{{ traefik_auth_address }}"
      - "traefik.frontend.auth.forward.authResponseHeader=X-Forwarded-User"
      - com.centurylinklabs.watchtower.enable

  - name: "graphite_github@"
    enabled: false
    description: "Graphite script to pull github stats"
    args: "ruby social_media_github_graphite.rb -d %i"
    image: halkeye/graphite_scripts
    environments:
      GRAPHITE_HOST: "{{ graphite_host }}"
      GRAPHITE_PORT: 2003
      SOCIAL_MEDIA_GITHUB_TOKEN: "{{ social_media_github_token }}"
      SOCIAL_MEDIA_GITHUB_CLIENT_ID: "{{ social_media_github_client_id }}"
      SOCIAL_MEDIA_GITHUB_CLIENT_SECRET: "{{ social_media_github_client_secret }}"

  - name: "graphite_linkedin@"
    description: Graphite script to pull linked in stats
    enabled: false
    args: ruby social_media_linkedin_graphite.rb -d %i
    image: halkeye/graphite_scripts
    environments:
      GRAPHITE_HOST: "{{ graphite_host }}"
      GRAPHITE_PORT: 2003
      SOCIAL_MEDIA_LINKEDIN_CLIENT_ID: "{{ social_media_linkedin_client_id }}"
      SOCIAL_MEDIA_LINKEDIN_CLIENT_SECRET: "{{ social_media_linkedin_client_secret }}"
      SOCIAL_MEDIA_LINKEDIN_HALKEYE_OAUTH_TOKEN: "{{ social_media_linkedin_halkeye_oauth_token }}"
      SOCIAL_MEDIA_LINKEDIN_HALKEYE_OAUTH_TOKEN_SECRET: "{{ social_media_linkedin_halkeye_oauth_token_secret }}"
      SOCIAL_MEDIA_LINKEDIN_NIGELGREGOIRE_OAUTH_TOKEN: "{{ social_media_linkedin_nigelgregoire_oauth_token }}"
      SOCIAL_MEDIA_LINKEDIN_NIGELGREGOIRE_OAUTH_TOKEN_SECRET: "{{ social_media_linkedin_nigelgregoire_oauth_token_secret }}"
      SOCIAL_MEDIA_LINKEDIN_WINNIEHO_OAUTH_TOKEN: "{{ social_media_linkedin_winnieho_oauth_token }}"
      SOCIAL_MEDIA_LINKEDIN_WINNIEHO_OAUTH_TOKEN_SECRET: "{{ social_media_linkedin_winnieho_oauth_token_secret }}"

  - name: "graphite_network@"
    description: Graphite script to pull router stats
    enabled: false
    args: ruby ipmi_network_graphite.rb -d %i
    image: halkeye/graphite_scripts
    environments:
      GRAPHITE_HOST: "{{ graphite_host }}"
      GRAPHITE_PORT: 2003

  - name: "graphite_twitter@"
    description: Graphite script to pull twitter stats
    enabled: true
    args: ruby social_media_twitter_graphite.rb -d %i
    image: halkeye/graphite_scripts
    environments:
      GRAPHITE_HOST: "{{ graphite_host }}"
      GRAPHITE_PORT: 2003
      SOCIAL_MEDIA_TWITTER_CLIENT_ID: "{{ social_media_twitter_client_id }}"
      SOCIAL_MEDIA_TWITTER_CLIENT_SECRET: "{{ social_media_twitter_client_secret }}"
      SOCIAL_MEDIA_TWITTER_OAUTH_TOKEN: "{{ social_media_twitter_oauth_token }}"
      SOCIAL_MEDIA_TWITTER_OAUTH_TOKEN_SECRET: "{{ social_media_twitter_oauth_token_secret }}"

  - name: happybubbles
    enabled: false
    image: johncardenas/happybubbles-presence:latest
    ports:
      - 3014:5555
    environments:
      MQTT_HOST: "{{ mqtt_host }}:1883"

  - name: graphite
    image: hopsoft/graphite-statsd
    enabled: false
    ports:
      - 5080:80
      - 2003-2004:2003-2004
      - 2003-2004:2003-2004/udp
      - 2023-2024:2023-2024
      - 8125:8125/udp
      - 8126:8126
    volumes:
      - "{{ docker_apps_dir }}/graphite/conf:/opt/graphite/conf"
      - "{{ docker_apps_dir }}/graphite/storage:/opt/graphite/storage"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:graphite.{{ traefik_domain }}"
      - com.centurylinklabs.watchtower.enable

  - name: homeassistant
    required_services:
      - mosquitto
    image: homeassistant/home-assistant
    volumes:
      - "{{ docker_apps_dir }}/hassio/config:/config"
      - "/etc/localtime:/etc/localtime:ro"
    devices:
      - /dev/ttyACM0
    labels:
      - "traefik.frontend.rule=Host:hab.{{ traefik_domain }}"
      - "traefik.enable=true"
      - "traefik.port=8123"
      - com.centurylinklabs.watchtower.enable

  - name: influxdb
    enabled: false
    image: influxdb
    volumes:
      - "{{ docker_apps_dir }}/influxdb:/var/lib/influxdb"
    ports:
      - 8083:8083
      - 8086:8086
      - 8089:8089/udp
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: jackett
    enabled: false
    image: linuxserver/jackett
    volumes:
      - "{{ docker_apps_dir }}/jackett:/config"
      - "/media/storage/jackett:/downloads"
    environments:
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
    ports:
      - 9117:9117
    labels:
      - "traefik.enable=true"
      - "traefik.port=9117"
      - com.centurylinklabs.watchtower.enable

  - name: jenkins-docker
    image: halkeye/jenkins:latest
    ports:
      - 50000:50000
    volumes:
      - "/var/lib/docker:/var/lib/docker"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "{{ docker_apps_dir }}/jenkins/_secrets:/run/secrets"
      - "{{ docker_apps_dir }}/jenkins/users:/var/jenkins_home/users"
      - "{{ docker_apps_dir }}/jenkins/jobs:/var/jenkins_home/jobs"
    environments:
      TZ: America/Vancouver
      DOCKER_HOST: unix:///var/run/docker.sock
    groups:
      - 978
    labels:
      - "traefik.frontend.rule=Host:jenkins.{{ traefik_domain }}"
      - "traefik.enable=true"
      - "traefik.port=8080"

  - name: mariadb
    image: mariadb:10.3
    enabled: true
    ports:
      - 3306:3306
    volumes:
      - "{{ docker_apps_dir }}/mariadb:/var/lib/mysql"
    environments:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: mineos
    enabled: false
    image: halkeye/docker-mineos
    ports:
      #- 127.0.0.1:8443:8443
      - 25565:25565
    volumes:
      - "/opt/minecraft:/var/games/minecraft"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8123"

  - name: lasso
    image: lassoproject/lasso
    enabled: false
    ports:
      - 3018:9090
    volumes:
      - "{{ docker_apps_dir }}/lasso/config:/config"
      - "{{ docker_apps_dir }}/lasso/data:/data"
    labels:
      - com.centurylinklabs.watchtower.enable
      - "traefik.enable=true"
      - "traefik.port=9090"


  - name: nextcloud
    enabled: false
    image: halkeye/docker-nextcloud
    ports:
      - 17900:80
    environments:
      MYSQL_ROOT_PASSWORD: "{{ nextcloud_mysql_root_password }}"
      MYSQL_USER: "{{ nextcloud_mysql_user }}"
      MYSQL_HOST: "{{ mysql_host }}"
      MYSQL_DATABASE: "{{ nextcloud_mysql_database }}"
      MYSQL_PASSWORD: "{{ nextcloud_mysql_password }}"
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    volumes:
      - "{{ docker_apps_dir }}/nextcloud/config:/var/www/html/config"
      - "{{ docker_apps_dir }}/nextcloud/data:/var/www/html/data"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - com.centurylinklabs.watchtower.enable

  - name: nodered
    image: halkeye/node-red
    ports:
      - 1880:1880
    environments:
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    volumes:
      - "{{ docker_apps_dir }}/nodered:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.port=1880"
      - com.centurylinklabs.watchtower.enable

  - name: bazarr
    enabled: false
    image: linuxserver/bazarr
    volumes:
      - "{{ docker_apps_dir }}/bazarr:/config"
      - "/storage/Videos/TV:/tv"
      - "/storage/Videos/TV:/storage/Videos/TV"
      - "/storage/Videos/Movies:/movies"
    environments:
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
    ports:
      - 3020:6767
    labels:
      - "traefik.enable=true"
      - "traefik.port=6767"
      - "traefik.frontend.auth.forward.address=https://{{ traefik_auth_address }}"
      - "traefik.frontend.auth.forward.authResponseHeader=X-Forwarded-User"
      - com.centurylinklabs.watchtower.enable

  - name: turtl
    image: halkeye/turtl
    volumes:
      - "{{ docker_apps_dir }}/turtl/plugins:/usr/src/app/plugin"
      - "{{ docker_apps_dir }}/turtl/uploads:/usr/src/app/public/uploads"
    environments:
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
      SELF_URL: "{{ turtl_self_url }}"
      DBURL: "postgres://{{ turtl_db_username }}:{{ turtl_db_password }}@{{ postgres_host }}:5432/{{ turtl_db_name }}"
    ports:
      - 3022:8181
    labels:
      - "traefik.enable=true"
      - "traefik.port=8181"
      - com.centurylinklabs.watchtower.enable

  - name: postgres
    image: postgres:10.4
    volumes:
      - "{{ docker_apps_dir }}/postgresql:/var/lib/postgresql/data"
    environments:
      POSTGRES_PASSWORD: "{{ postgres_password }}"
    ports:
      - 5432:5432
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: radarr
    image: linuxserver/radarr
    required_services:
      - transmission-daemon
      - nzbget
    volumes:
      - "{{ docker_apps_dir }}/radarr:/config"
      - "/media/storage/downloads/Movies:/media/storage/downloads/Movies"
      - "/storage/Videos/Anime Movies:/storage/Videos/Anime Movies"
      - "/storage/Videos/Movies:/movies"
      - "/media/storage/:/media/storage/"
    environments:
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.port=7878"
      - com.centurylinklabs.watchtower.enable

  - name: sourcegraph
    enabled: false
    image: sourcegraph/server:2.13.6
    volumes:
      - "{{ docker_apps_dir }}/sourcegraph/config:/etc/sourcegraph"
      - "{{ docker_apps_dir }}/sourcegraph/data:/var/opt/sourcegraph"
      - "/var/run/docker.sock:/var/run/docker.sock"
    ports:
      - 7080:7080
    required_services:
      - postgres
      - redis
    environments:
      REDIS_ENDPOINT: "{{ redis_host }}:6379"
      PGHOST: "{{ postgres_host }}"
      PGUSER: "{{ sourcegraph_db_user }}"
      PGPASSWORD: "{{ sourcegraph_db_password }}"
      PGDATABASE: "{{ sourcegraph_db_name }}"
      PGSSLMODE: disable
    labels:
      - "traefik.enable=true"
      - "traefik.port=7080"
      - com.centurylinklabs.watchtower.enable

  - name: redis
    image: redis:3.2
    enabled: false
    volumes:
      - "{{ docker_apps_dir }}/redis:/data"
    ports:
      - 6379:6379
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: nzbget
    image: linuxserver/nzbget
    volumes:
      - "/media/storage/downloads:/media/storage/downloads"
      - "{{ docker_apps_dir }}/nzbget/downloads:/downloads"
      - "{{ docker_apps_dir }}/nzbget/config:/config"
    # ports: ["6789:6789"]
    environments:
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    labels:
      - com.centurylinklabs.watchtower.enable
      - "traefik.enable=true"
      - "traefik.port=6789"

  - name: traefik
    image: traefik
    extras:
      - "--dns=8.8.8.8"
    volumes:
      - "{{ docker_apps_dir }}/traefik:/config"
      - "{{ docker_apps_dir }}/dehydrated/certs:{{ docker_apps_dir }}/dehydrated/certs"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environments:
      CLOUDFLARE_EMAIL: "{{ cf_email }}"
      CLOUDFLARE_API_KEY: "{{ cf_key }}"
    ports:
      - 80:80
      - 2081:81
      - 443:443
    labels:
      - "traefik.enable=true"
      - "traefik.port=2018"
      - com.centurylinklabs.watchtower.enable
    args: --configFile=/config/traefik.toml

  - name: crea
    image: halkeye/crea
    enabled: false
    volumes:
      - "{{ docker_apps_dir }}/crea/worlds:/worlds"
    ports:
      - 5555:5555
    environments:
      CREA_WORLD_NAME: "{{ crea_world_name }}"
      CREA_PASSWORD: "{{ crea_password }}"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: crea
    image: v2tec/watchtower
    environments:
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: "{{ watchtower_notification_email_server }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: "{{ watchtower_notification_email_server_port }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: "{{ watchtower_notification_email_server_user }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: "{{ watchtower_notification_email_server_password }}"
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "{{ watchtower_notification_email_from }}"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "{{ watchtower_notification_email_to }}"
      WATCHTOWER_LABEL_ENABLE: "true"
    labels:
      - com.centurylinklabs.watchtower.enable
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"

  - name: vault
    image: vault
    enabled: false
    extras:
      - "--cap-add=IPC_LOCK"
    args: "server"
    ports:
      - 8200:8200
    environments:
      VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h", "listener":{"tcp":{"address":"0.0.0.0:8200","tls_disable":1}}'
    volumes:
      - "{{ docker_apps_dir }}/vault:/vault/file"

  - name: thelounge
    image: thelounge/lounge:latest
    enabled: false
    volumes:
      - "{{ docker_apps_dir }}/thelounge.service:/home/lounge/data"
    ports:
      - 9002:9000
    labels:
      - "traefik.frontend.rule=Host:theirc.{{ traefik_domain }}"
      - "traefik.enable=true"
      - "traefik.port=9000"
      - com.centurylinklabs.watchtower.enable

  - name: telegraf
    image: nuntz/telegraf-snmp
    enabled: false
    extras:
      - "--privileged"
    environments:
      HOST_PROC: /host/proc
    volumes:
      - "/proc:/host/proc:ro"
      - "{{ docker_apps_dir }}/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: terraria
    image: ryshe/terraria:latest
    enabled: false
    volumes:
      - "{{ docker_apps_dir }}/terraria/world:/world"
    ports:
      - 7777:7777
      - 7776:7776
    args: -autocreate 3 -world /world/Lg-Normal-17-02.wld
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: nzbhydra
    enabled: false
    image: linuxserver/hydra
    volumes:
      - "{{ docker_apps_dir }}/nzbhydra:/config"
      - "/media/storage/nzbhydra:/downloads"
    ports:
      - 5075:5075
    environments:
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
    labels:
      - "traefik.enable=true"
      - "traefik.port=5075"
      - com.centurylinklabs.watchtower.enable

  - name: nzbhydra2
    enabled: false
    image: linuxserver/hydra2
    volumes:
      - "{{ docker_apps_dir }}/nzbhydra2:/config"
      - "/media/storage/nzbhydra:/downloads"
    environments:
      PUID: 1000
      PGID: 1000
      TZ: America/Vancouver
    labels:
      - "traefik.enable=true"
      - "traefik.port=5075"
      - com.centurylinklabs.watchtower.enable

  - name: tautulli-influxdb-export
    enabled: false
    image: halkeye/tautulli-influxdb-export
    environments:
      PLEXPYWEBPROTOCOL: "{{ plexpywebprotocol }}"
      PLEXPYHOST: "{{ plexpyhost }}"
      PLEXPYPORT: "{{ plexpyport }}"
      PLEXPYAPIKEY: "{{ plexpyapikey }}"
      INFLUXDBHOST: "{{ influxdb_host }}"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: syslog-server
    image: balabit/syslog-ng:latest
    volumes:
      - "{{ docker_apps_dir }}/syslog/etc/syslog-ng.conf:/etc/syslog-ng/syslog-ng.conf"
      - "{{ docker_apps_dir }}/log:/var/log"
    ports:
      - 514:514
      - 601:601
      - 514:514/udp
      - 601:601/udp
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: starbound
    description: Starbound Game Server
    image: halkeye/docker-starbound
    volumes:
      - "{{ docker_apps_dir }}/starbound:/opt/starbound"
    ports:
      - 21025:21025/tcp
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: sonarr
    image: linuxserver/sonarr
    required_services:
      - transmission-daemon
      - nzbget
    volumes:
      - "/dev/rtc:/dev/rtc:ro"
      - "{{ docker_apps_dir }}/sonarr.service:/config"
      - "/media/storage/downloads:/media/storage/downloads"
      - "/storage/Videos/TV:/storage/Videos/TV"
      - "/storage/Videos/Anime:/storage/Videos/Anime"
      - "/storage/Videos/Webseries:/storage/Videos/Webseries"
      - "/storage/sickbeard/sonarr:/storage/sickbeard/sonarr"
      - "/media/storage:/media/storage"
    ports:
      - 8989:8989
    environments:
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8989"
      - com.centurylinklabs.watchtower.enable

  - name: plexpy
    image: linuxserver/tautulli
    volumes:
      - "{{ docker_apps_dir }}/plexpy:/config"
      - "/var/lib/plexmediaserver/Library/Application Support/Plex Media Server/Logs:/logs:ro"
    ports:
      - 8181:8181
    environments:
      PGID: 995
      PUID: 997
      TZ: "America/Vancouver"
    labels:
      - "traefik.frontend.rule=Host:plexstats.{{ traefik_domain }}"
      - "traefik.enable=true"
      - "traefik.port=8181"
      - com.centurylinklabs.watchtower.enable

  - name: plex-docker
    description: Plex Media Server (dockerized)
    image: plexinc/pms-docker:latest
    volumes:
      - "{{ docker_apps_dir }}/plexmediaserver/database:/config"
      - "{{ docker_apps_dir }}/plexmediaserver/transcode:/transcode"
      - /storage/Audio:/media/Audio
      - /storage/Videos:/media/Videos
    ports:
      - 32400:32400/tcp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32469:32469/tcp
      - 1900:1900/udp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
    environments:
      TZ: America/Vancouver
      PLEX_CLAIM: "{{ plex_claim }}"
      ADVERTISE_IP: "{{ plex_advertise_ip }}"
    extras:
      - "-h {{ plex_hostname }}"
    labels:
      - "traefik.enable=true"
      - "traefik.port=32400"
      - com.centurylinklabs.watchtower.enable

  - name: pihole
    enabled: false
    # ExecStartPre=/usr/bin/bash -c "/usr/bin/systemctl set-environment DNSCRYPT2_IP=$(docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' dnscrypt)"
    image: halkeye/pi-hole:latest
    volumes:
      - "{{ docker_apps_dir }}/pihole/pihole:/etc/pihole/"
      - "{{ docker_apps_dir }}/pihole/dnsmasq.d/:/etc/dnsmasq.d/"
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 8053:80/tcp
    environments:
      DNS1: 1.1.1.1
      DNS2: 1.0.0.1
      VIRTUAL_HOST: "{{ pihole_virtual_host }}"
      ServerIP: "{{ pihole_server_ip }}"
      TZ: America/Vancouver
      WEBPASSWORD: "{{ pihole_password }}"
    extras:
      - "--dns 127.0.0.1"
      - "--dns 1.1.1.1"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - com.centurylinklabs.watchtower.enable

  - name: phabricator
    enabled: false
    image: bitnami/phabricator:latest
    ports:
      - 45080:80
      - 45443:443
    environments:
      MARIADB_HOST: "{{ mysql_host }}"
      MARIADB_PORT: 3306
      MARIADB_USER: "{{ mysql_root_username }}"
      MARIADB_PASS: "{{ mysql_root_password }}"
    volumes:
      - "{{ docker_apps_dir }}/phabricator:/bitnami"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - com.centurylinklabs.watchtower.enable

  - name: pgadmin
    image: chorss/docker-pgadmin4
    enabled: false
    volumes:
      - "{{ docker_apps_dir }}/pgadmin4:/data"
    ports:
      - 3009:5050
    environments:
      UID: 1000
      GID: 1000
      SERVER_MODE: 'true'
      PGADMIN_SETUP_EMAIL: "{{ pgadmin_setup_email }}"
      PGADMIN_SETUP_PASSWORD: "{{ pgadmin_setup_password }}"
    labels:
      - "traefik.enable=true"
      - "traefik.port=5050"
      - com.centurylinklabs.watchtower.enable

  - name: octobox
    image: octoboxio/octobox:latest
    ports:
      - 8090:3000
    environments:
      GITHUB_CLIENT_ID: "{{ octobox_github_client_id }}"
      GITHUB_CLIENT_SECRET: "{{ octobox_github_client_secret }}"
      SECRET_KEY_BASE: "{{ octobox_secret_key_base }}"
      RAILS_SERVE_STATIC_FILES: "true"
      RAILS_LOG_TO_STDOUT: "true"
      OCTOBOX_DATABASE_USERNAME: "{{ octobox_database_username }}"
      OCTOBOX_DATABASE_PASSWORD: "{{ octobox_database_password }}"
      OCTOBOX_DATABASE_NAME: "{{ octobox_database_name }}"
      OCTOBOX_DATABASE_HOST: "{{ postgres_host }}"
      REDIS_URL: "{{ redis_host }}"
      RAILS_ENV: production
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.port=3000"
      - com.centurylinklabs.watchtower.enable

  - name: minio
    image: minio/minio
    enabled: false
    volumes:
      - /storage/minio:/data
      - /storage/apps/minio/:/root/.minio
    args: "server /data"
    labels:
      - com.centurylinklabs.watchtower.enable
      - "traefik.enable=true"
      - "traefik.port=9000"
      - "traefik.frontend.rule=Host:storage.{{traefik_domain}}"

  - name: unifi
    image: linuxserver/unifi
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8081:8081
      - 8843:8843
      - 8880:8880
      - 6789:6789
    environments:
      PGID: 1000
      PUID: 1000
      TZ: "America/Vancouver"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ docker_apps_dir }}/unifi:/config"
    labels:
      - com.centurylinklabs.watchtower.enable
      - "traefik.enable=true"
      - "traefik.port=8443"
      - "traefik.frontend.rule=Host:unifi.odin.{{traefik_domain}}"
      - "traefik.protocol=https"

  - name: jenkins-evergreen
    image: jenkins/evergreen:docker-cloud
    environments:
      LOG_LEVEL: debug
      TZ: America/Vancouver
    volumes:
      - /var/lib/docker:/var/lib/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ docker_apps_dir }}/jenkins-evergreen:/evergreen/data"
    labels:
      - "traefik.enable=true"
      - "traefik.port=80"
      - "traefik.frontend.rule=Host:jenkins-evergreen.odin.{{traefik_domain}}"
    groups:
      - 978

  - name: nfs-server-docker
    enabled: false
    image: itsthenetwork/nfs-server-alpine:latest
    ports:
      - 2050:2049
    extras:
      - "--privileged"
    environments:
      SHARED_DIRECTORY: "/nfsshare"
    volumes:
      - "{{ docker_apps_dir }}:/nfsshare{{ docker_apps_dir }}"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: watchtower
    image: v2tec/watchtower
    environments:
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: "{{ watchtower_notification_email_server }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: "{{ watchtower_notification_email_server_port }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: "{{ watchtower_notification_email_server_user }}"
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: "{{ watchtower_notification_email_server_password }}"
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: "{{ watchtower_notification_email_from }}"
      WATCHTOWER_NOTIFICATION_EMAIL_TO: "{{ watchtower_notification_email_to }}"
    args:
      - --label-enable
      - --cleanup
      - --interval 3600
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    labels:
      - com.centurylinklabs.watchtower.enable

  - name: registry
    image: registry:2.7.1
    volumes:
      - "{{ docker_apps_dir }}/nodered:/data"
    labels:
      - "traefik.enable=true"
      - "traefik.port=5000"

  - name: files
    image: halverneus/static-file-server:latest
    volumes:
      - "/storage/Files:/web"
    labels:
      - "traefik.enable=true"
      - "traefik.port=8080"
