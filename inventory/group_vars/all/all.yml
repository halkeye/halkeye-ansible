---
# - host
zsh_powerlevel9k_left_prompt:
  - host
  - vcs
  - virtualenv
  - dir

zsh_powerlevel9k_right_prompt: []
zsh_hotkeys_extras:
  - { hotkey: '\e[3~', action: 'delete-char' }
npm_config_prefix: "{{ lookup('env','HOME') }}/.npm-global"

ruby_install_gems_user: "{{ lookup('env','USER') }}"
ruby_install_from_source: true
ruby_install_gems:
  - tmuxinator
  - bundler
  - gist

global_ubuntu_ppas: []
global_centos_packages:
  - python
  - python-devel
  - python34
  - python34-devel
  - python34-pip
  - python36
  - python36-devel
  - python36-pip
  - mosh
global_ubuntu_packages:
  - silversearcher-ag
  - jq
  - curl
  - tig
  - libffi-dev
  - libssl-dev
  - mosh
  - net-tools
  - nmap
  - whois
  - entr
  - vim
  - direnv
global_darwin_packages:
  - gpg2
  - jq
  - coreutils
  - tig
git_config:
  user:
    name: Gavin Mogan
    email: git@gavinmogan.com
  core:
    editor: vim
    excludesfile: "~/.gitexcludesfile"
  push:
    default: current
  fetch:
    prune: "true"
  mergetool:
    keepBackup: "false"
  'mergetool "vimdiff"':
    cmd: vim -d $LOCAL $REMOTE $MERGED
  'diff "sopsdiffer"':
    textconv: "sops -d"
  'url "ssh://git@github.com/"':
    insteadOf: 'https://github.com/'
  alias:
    root: rev-parse --show-toplevel
git_ignore:
  - "*~"
  - "# temporary files which can be created if a process still has a handle open of a deleted file"
  - ".fuse_hidden*"
  - ""
  - "# KDE directory preferences"
  - ".directory"
  - ""
  - "# Linux trash folder which might appear on any partition or disk"
  - ".Trash-*"
  - ""
  - "# .nfs files are created when an open file is removed but is still being accessed"
  - ".nfs*"
  - "# Swap"
  - "[._]*.s[a-v][a-z]"
  - "!*.svg  # comment out if you don't need vector files"
  - "[._]*.sw[a-p]"
  - "[._]s[a-rt-v][a-z]"
  - "[._]ss[a-gi-z]"
  - "[._]sw[a-p]"
  - ""
  - "# Session"
  - "Session.vim"
  - "Sessionx.vim"
  - ""
  - "# Temporary"
  - ".netrwhist"
  - "*~"
  - "# Auto-generated tag files"
  - "tags"
  - "# Persistent undo"
  - "[._]*.un~"
  - ".lsyncd"
  - ".vscode"
  - ".envrc"
  - ".direnv"
  - "*.iml"
  - ".idea"
  - "__pycache__/"
  - "*.pyc"
  - ".factorypath"

tmux_tpm_plugins_path: "{{ lookup('env','HOME') }}/.tmux/plugins"

asdf_user: "{{ lookup('env', 'USER') }}"
asdf_group: "{{ lookup('env', 'USER') }}"
asdf_plugins:
  - name: "java"    # a plugin name
    repository: ""    # a plugin repository, optional
    versions:         # a list of versions to install
      - zulu-8.48.0.53
      - zulu-11.31.11
    global: zulu-11.31.11
  - name: "maven"
    repository: ""    # a plugin repository, optional
    versions:         # a list of versions to install
      - 3.8.4
    global: 3.8.4
  - name: "ruby"
    repository: ""    # a plugin repository, optional
    versions:         # a list of versions to install
      - 3.1.0
      - 3.2.0
    global: "3.2.0"
  - name: "nodejs"
    repository: ""    # a plugin repository, optional
    versions:         # a list of versions to install
      - 16.13.1
      - 20.12.2
      - 21.7.3
    global: "16.13.1"
  - name: "python"
    repository: ""    # a plugin repository, optional
    versions:         # a list of versions to install
      - 3.10.2
    global: "3.10.2"
  - name: "groovy"
    repository: "https://github.com/weibemoura/asdf-groovy.git"
    versions:
      - "3.0.7"
    global: "3.0.7"
  - name: "rust"
    versions:
      - 1.58.1
    global: 1.58.1
  - name: "gradle"
    versions:
      - 7.3.1
    global: 7.3.1

env_home: "{{ lookup('env','HOME') }}"
env_user: "{{ lookup('env','USER') }}"
docker__users: ["{{ ansible_env.SUDO_USER | d('root') }}"]

go_version: "1.22.3"

git_version: "2.45.1" # repo: git/git
git_install_from_source: true
git_install_from_source_force_update: true

ghr_install_dir: "{{ env_home }}/.local/bin"

asdf_version: "v0.14.0" # repo: asdf-vm/asdf
software_version_neovim: "0.10.0" # repo: neovim/neovim
software_version_treesitter: "0.22.6" # repo: tree-sitter/tree-sitter
software_version_kubectl: "1.30.1" # repo: kubernetes/kubernetes
software_version_fzf: "0.52.1" # repo: junegunn/fzf
software_version_zoxide: "0.9.4" # repo: ajeetdsouza/zoxide
software_version_age: "1.1.1" # repo: FiloSottile/age
# Terminal JSON viewer & processor
software_version_fx: "34.0.0" # repo: antonmedv/fx
# A cat(1) clone with wings.
software_version_bat: "0.24.0" # repo: sharkdp/bat
# The next gen ls command
software_version_lsd: "1.1.2" # repo: lsd-rs/lsd
# The official command line interface for the DigitalOcean API.
software_version_doctl: "1.106.0" # repo: digitalocean/doctl
# Simple and flexible tool for managing secrets
software_version_sops: "3.8.1" # repo: getsops/sops
# Declaratively deploy your Kubernetes manifests, Kustomize configs, and Charts as Helm releases. Generate all-in-one manifests for use with ArgoCD.
software_version_helmfile: "1.0.0-rc.0" # repo: helmfile/helmfile
# The Kubernetes Package Manager
software_version_helm: "3.15.0" # repo: helm/helm
# Kubernetes CLI To Manage Your Clusters In Style!
software_version_k9s: "0.32.4" # repo: derailed/k9s
# Faster way to switch between clusters and namespaces in kubectl
software_version_kubectx: "0.9.5" # repo: ahmetb/kubectx
# ShellCheck, a static analysis tool for shell scripts
software_version_shellcheck: "0.10.0" # repo: koalaman/shellcheck
# GitHubâ€™s official command line tool
software_version_gh: "2.49.2" # repo: cli/cli
# Dockerfile linter, validate inline bash, written in Haskell
software_version_hadolint: "2.12.0" # repo: hadolint/hadolint
# The most customisable and low-latency cross platform/shell prompt renderer
software_version_oh_my_posh: "20.0.2" # repo: JanDeDobbeleer/oh-my-posh
# Source code spell checker
software_version_typos: "1.21.0" # repo: crate-ci/typos
# A simple, fast and user-friendly alternative to 'find'
# (Currently used by ctrl+p in vim)
software_version_fd: "10.1.0" # repo: sharkdp/fd
